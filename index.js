
import express from 'express'
import path from 'path'
import { Telegraf } from 'telegraf'
import {message} from 'telegraf/filters'
import { Keyboard } from 'grammy'
import { findRowByRecord, updateRowByRecord } from './google.js'
import { handleGetMessage, isPayoneerLink } from './template.js'
import { telegramApiKey } from './config.js'

const expressApp = express()
expressApp.use(express.static('static'))
expressApp.use(express.json());

const bot = new Telegraf(telegramApiKey);

expressApp.get("/", (req, res) => {
  res.sendFile(path.join(__dirname + '/index.html'));
});

bot.launch();

bot.command('start', ctx => {
    const startKeyboard = new Keyboard().text('–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è —Ç–≤–æ–≥–æ —ñ–Ω–≤–æ–π—Å—É');
    ctx.reply('–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç —â–æ –¥–∞—Å—Ç—å —Ç–æ–±—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —â–æ–¥–æ —ñ–Ω–≤–æ–π—Å—ñ–≤. –ù–∞—Ç–∏—Å–Ω–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∞–±–∏ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ—Ç—Ä—ñ–±–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é. –£ —Ä–∞–∑—ñ –≤–∏–Ω–∏–∫–Ω–µ–Ω–Ω—è –ø–∏—Ç–∞–Ω—å, –ø–∏—à–∏ –Ω–∞—à–æ–º—É HR @svitlanamartyniuk', {
        reply_markup: startKeyboard,
        
    });
  })

bot.on(message('sticker'), (ctx) => ctx.reply('üëã'))

bot.hears('–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è —Ç–≤–æ–≥–æ —ñ–Ω–≤–æ–π—Å—É', async (ctx) => {
    const username = ctx.from.username;

    const data = await findRowByRecord(username);

    if (!data) {
        return ctx.reply('–Ü–Ω–≤–æ–π—Å –Ω–µ –≥–æ—Ç–æ–≤–∏–π, —Å–ø—Ä–æ–±—É–π –ø—ñ–∑–Ω—ñ—à–µ');
    }

    const parsedData = JSON.parse(data);
  
    ctx.reply(handleGetMessage(parsedData));
});

bot.on(message('text'), async (ctx) => {
    if (!ctx.message.text) {
        return;
    }
    const isValidLink = isPayoneerLink(ctx.message.text);
    try {
        if (isValidLink) {
            await updateRowByRecord(ctx.from.username, ctx.message.text);
            ctx.reply('–ü–æ—Å–∏–ª–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ, –¥—è–∫—É—é!');
        } else {
            ctx.reply('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ Payoneer, —Å–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑');
        }
    } catch (err) {
        ctx.reply('–ü–æ–º–∏–ª–∫–∞(');
    }
})


